stages:
- test
- pre-build
- build
- deployment
- migrate
- post-deployment

variables:
  VAR_KUBE_CONTEXT: $ENV

test:
  stage: test
  image: ruby:2.4.1
  only:
  - /^test-.*$/
  script:
  - make dep

build-image:
  stage: build
  image: $CI_REGISTRY/sre/gudang/docker:1.0.0
  tags:
  - build-image
  only:
  - triggers
  script:
  - export VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHA}
  - docker login -u $CI_REGISTRY_USER -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - make build push

.deploy-template: &deploy-template
  stage: deployment
  image: $CI_REGISTRY/sre/gudang/deployment:3.2.0
  tags:
  - bare-metal
  only:
  - triggers
  script:
  - export VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHA}
  - kubectl config use-context $VAR_KUBE_CONTEXT
  - ENV=production make deploy

deploy:
  <<: *deploy-template

deploy-service:
  <<: *deploy-template
  allow_failure: true
  when: manual
  variables:
    FILE: service

notify-done:
  stage: post-deployment
  when: on_success
  image: appropriate/curl
  allow_failure: true
  before_script:
    - "apk --update add --no-cache git"
  script:
    - curl -XGET "192.241.135.40:15474/notify_done?service=hawk&branch=$CI_COMMIT_REF_NAME&deployer=$DEPLOYER&roles=$ENV"
  only:
    - triggers

notify-failed:
  stage: post-deployment
  when: on_failure
  image: appropriate/curl
  allow_failure: true
  only:
    - triggers
  before_script:
    - "apk --update add --no-cache git"
  script:
    - curl -XGET "192.241.135.40:15474/notify_failed?service=hawk&branch=$CI_COMMIT_REF_NAME&deployer=$DEPLOYER&roles=$ENV"

notify-start:
  stage: test
  image: appropriate/curl
  allow_failure: true
  before_script:
    - "apk --update add --no-cache git"
  script:
    - curl -XGET "192.241.135.40:15474/notify_start?service=hawk&branch=$CI_COMMIT_REF_NAME&deployer=$DEPLOYER&roles=$ENV"
  only:
    - triggers

migrate-run-production:
  stage: migrate
  image:
    name: $CI_REGISTRY/sre/migration:0.0.1
    entrypoint: [""]
  variables:
    RAILS_ENV: production
    ENV: production
  script:
  - ln -s $CI_PROJECT_DIR/db/ /app/
  - cd /app/
  - envconsul -once -consul=$CONSUL_ADDR -sanitize -upcase -prefix=$CI_PROJECT_NAME migration db:migrate
  - envconsul -once -consul=$CONSUL_ADDR -sanitize -upcase -prefix=$CI_PROJECT_NAME migration db:migrate:status
  only:
  - /^migrate-run-production-.*$/
