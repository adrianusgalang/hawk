stages:
- test
- pre-build
- build
- deployment
- migrate

variables:
  VAR_KUBE_CONTEXT: production

test:
  stage: test
  image: ruby:2.4.1
  only:
  - /^deploy-test-.*$/
  script:
  - make dep

build-image:
  stage: build
  image: registry.bukalapak.io/sre/gudang/docker:1.0.0
  tags:
  - build-image
  only:
  - /^deploy-.*$/
  script:
  - export VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHA}
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - make build push

.deploy-template: &deploy-template
  stage: deployment
  image: registry.bukalapak.io/sre/gudang/deployment:2.2.0
  tags:
  - bare-metal
  only:
  - /^deploy-.*$/
  script:
  - export VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHA}
  - kubectl config use-context $VAR_KUBE_CONTEXT
  - ENV=production make deploy

deploy:
  <<: *deploy-template

deploy-service:
  <<: *deploy-template
  allow_failure: true
  when: manual
  variables:
    FILE: service

migrate-run-production:
  stage: migrate
  image:
    name: registry.bukalapak.io/sre/migration:0.0.1
    entrypoint: [""]
  variables:
    RAILS_ENV: production
    ENV: production
  script:
  - ln -s $CI_PROJECT_DIR/db/ /app/
  - cd /app/
  - envconsul -once -consul=$CONSUL_ADDR -sanitize -upcase -prefix=$CI_PROJECT_NAME migration db:migrate
  - envconsul -once -consul=$CONSUL_ADDR -sanitize -upcase -prefix=$CI_PROJECT_NAME migration db:migrate:status
  only:
  - /^migrate-run-production-.*$/
